[{"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\App.js":"1","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\header\\Header.jsx":"2","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\listcontainer\\ListContainer.jsx":"3","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\index.js":"4","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\reportWebVitals.js":"5","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\TodoForm\\TodoForm.jsx":"6"},{"size":230,"mtime":1607694772260,"results":"7","hashOfConfig":"8"},{"size":858,"mtime":1607455629072,"results":"9","hashOfConfig":"8"},{"size":2438,"mtime":1607699827186,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1607694841896,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1607694882693,"results":"12","hashOfConfig":"8"},{"size":972,"mtime":1607698603618,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hfq6i",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\App.js",[],"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\header\\Header.jsx",[],"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\listcontainer\\ListContainer.jsx",["27"],"import React, { useState } from 'react'\r\nimport * as Ai from 'react-icons/ai'\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport './ListContainer.scss'\r\n\r\nfunction ListContainer(props) {\r\n    const [toggleClass, setToggleClass] = useState(false);\r\n    const addClass = () => setToggleClass(!toggleClass);\r\n\r\n    const [remover, setRemover] = useState(false);\r\n    const removeItem = () => setRemover(!remover);\r\n\r\n    const [todos, setTodos] = useState([])\r\n    const addTodos = (input) => {\r\n        if(!input.text || /^\\s*$/.test(input.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [input, ...todos];\r\n        setTodos(newTodos);\r\n        console.log(newTodos);\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const removeAllTodos = id => {\r\n        const removeAll = [...todos]\r\n\r\n        setTodos(removeAll);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"listcontainer\">\r\n                <TodoForm onSubmit={addTodos}/>\r\n            </div>\r\n            \r\n            <div className=\"listcontainer_todo\">\r\n                {todos.map((todo, index) => (\r\n                    <div className={`listcontainer_items ${remover ? \"remove\" : null}`} key={index} >\r\n                        <div className=\"listcontainer_content\" key={todo.id}>\r\n                            <input type=\"checkbox\" />\r\n                            <p>{todo.text}</p>\r\n                        </div>\r\n                        <Ai.AiOutlineClose onClick={() => removeTodo(todo.id)}/>\r\n                    </div>\r\n                ))}\r\n                \r\n                <div className=\"listcontainer_list\">\r\n                    <p>0 items left</p>\r\n                    <ul>\r\n                        <li><a onClick={addClass} className={ toggleClass ? \"active\" : null } href=\"#all\">All</a></li>\r\n                        <li><a onClick={addClass} className={ toggleClass ? \"active\" : null } href=\"#active\">Active</a></li>\r\n                        <li><a onClick={addClass} className={ toggleClass ? \"active\" : null } href=\"#completed\">Completed</a></li>\r\n                    </ul>\r\n                    <a href=\"#clear\" className={ toggleClass ? \"active\" : null } onClick={() => removeAllTodos()}>Clear Completed</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListContainer\r\n","C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\index.js",[],"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\reportWebVitals.js",[],"C:\\Users\\Yassine\\Desktop\\Front-End-Mentor\\todo_app\\src\\TodoForm\\TodoForm.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":11,"column":11,"nodeType":"30","messageId":"31","endLine":11,"endColumn":21},"no-unused-vars","'removeItem' is assigned a value but never used.","Identifier","unusedVar"]